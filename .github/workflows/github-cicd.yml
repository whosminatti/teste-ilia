name: Deploy EKS Cluster com Terraform + Grafana com Helm

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checa repo
        uses: actions/checkout@v3

      - name: Configura AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7  # vers√£o que preferir

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: terraform state list
        run: terraform state list
      
      # - name: Terraform RM
      #   run: |
      #     terraform state rm module.eks.kubernetes_config_map.aws_auth[0]
      #     terraform state rm data.aws_eks_cluster.cluster
      #     terraform state rm data.aws_eks_cluster_auth.cluster




      # - name: Terraform Plan
      #   run: terraform plan -out=tfplan -var-file="main.tfvars" -out=tfplan

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform apply -auto-approve tfplan

      - name: Terraform Destroy EKS FALSE
        run: terraform destroy -auto-approve -var="create_eks=false"

      - name: Terraform Destroy EKS TRUE
        run: terraform destroy -auto-approve -var="create_eks=true"

      # - name: Install kubectl
      #   uses: azure/setup-kubectl@v3
      #   with:
      #     version: 'latest'

      # - name: Install Helm
      #   uses: azure/setup-helm@v4
      #   with:
      #     version: 'latest'

      # - name: Update kubeconfi pra conectar com EKS
      #   run: |
      #     aws eks update-kubeconfig --name teste-ilia --region us-east-1

      # - name: Cria NS monitoring
      #   run: |
      #     kubectl get namespace monitoring || kubectl create namespace monitoring

      # - name: Add Grafana Helm repo and update
      #   run: |
      #     helm repo add grafana https://grafana.github.io/helm-charts
      #     helm repo update

      # - name: Install ou upgrade Grafana Helm chart
      #   run: |
      #     helm upgrade --install my-grafana grafana/grafana --namespace monitoring \
      #       --set persistence.enabled=true \
      #       --set persistence.size=10Gi \
      #       --set adminPassword=${{ secrets.GRAFANA_ADMIN_PASSWORD }} \
      #       --set service.type=LoadBalancer

      # - name: Checa status pods do grafana
      #   run: kubectl get pods -n monitoring